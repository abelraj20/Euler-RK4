# -*- coding: utf-8 -*-
"""E1

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1c219gtseLyOUsnWn7QOUQZQ-xx8Xzn_3
"""

import numpy as np
import matplotlib.pyplot as plt
from google.colab import files

# Set variables
dt1 = 0.5
dt2 = 0.25
dt3 = 0.1
t_max = 10
tau = 2



# Initial conditions
t_0 = 0
N_0 = 10
A_0 = 10

# Arrays for different time steps
t1, N1, A1 = [t_0], [N_0], [A_0]
t2, N2, A2 = [t_0], [N_0], [A_0]
t3, N3, A3 = [t_0], [N_0], [A_0]

# Appending loop for dt1
while abs(t1[-1] - t_max) > dt1 / 2:
    t_new = t1[-1] + dt1
    N_new = N1[-1] - N1[-1] / tau * dt1
    A_new = A_0 * np.exp(- t_new/tau)
    t1.append(t_new)
    N1.append(N_new)
    A1.append(A_new)

# Appending loop for dt2 (fixing append issue)
while abs(t2[-1] - t_max) > dt2 / 2:
    t_new = t2[-1] + dt2
    N_new = N2[-1] - N2[-1] / tau * dt2
    A_new = A_0 * np.exp(- t_new/tau)
    t2.append(t_new)
    N2.append(N_new)
    A2.append(A_new)

# Appending loop for dt3 (fixing appending issue)
while abs(t3[-1] - t_max) > dt3 / 2:
    t_new = t3[-1] + dt3
    N_new = N3[-1] - N3[-1] / tau * dt3
    A_new = A_0 * np.exp(- t_new/tau)
    t3.append(t_new)
    N3.append(N_new)
    A3.append(A_new)

# plot 0.5
plt.figure(figsize=(10, 6))
plt.plot(t1,N1,'.', label='Calculated Values', color='royalblue')
plt.plot(t1,A1,'.', label='Exact Values', color='tomato')
plt.xlabel('Time (t)')
plt.ylabel('N (Number of Nuclei)')
plt.xlim(-0.1,10.2)
plt.ylim(-0.1,10.2)
plt.legend()
plt.savefig('E105graph.png', bbox_inches='tight')
#plt.show()
files.download("E105graph.png")

# plot 0.25
plt.figure(figsize=(10, 6))
plt.plot(t2,N2,'.', label='Calculated Values', color='royalblue')
plt.plot(t2,A2,'.', label='Exact Values', color='tomato')
plt.xlabel('Time (t)')
plt.ylabel('N (Number of Nuclei)')
plt.xlim(-0.1,10.2)
plt.ylim(-0.1,10.2)
plt.legend()
plt.savefig('E1025graph.png', bbox_inches='tight')
plt.show()
files.download("E1025graph.png")

# plot 0.1
plt.figure(figsize=(10, 6))
plt.plot(t3,N3,'.', label='Calculated Values', color='royalblue')
plt.plot(t3,A3,'.', label='Exact Values', color='tomato')
plt.xlabel('Time (t)')
plt.ylabel('N (Number of Nuclei)')
plt.xlim(-0.1,10.2)
plt.ylim(-0.1,10.2)
plt.legend()
plt.savefig('E101graph.png', bbox_inches='tight')
plt.show()
files.download("E101graph.png")

# differences
N1 = np.array(N1)
A1 = np.array(A1)

N2 = np.array(N2)
A2 = np.array(A2)

N3 = np.array(N3)
A3 = np.array(A3)

diff1 = abs(N1 - A1)
diff2 = abs(N2 - A2)
diff3 = abs(N3 - A3)

plt.figure(figsize=(10, 6))
plt.plot(t1, diff1, '.', color='maroon', label='Difference, h=0.5')

# Plot second dataset (t2, diff2)
plt.plot(t2, diff2, '.', color='blue', label='Difference, h=0.25')

# Plot third dataset (t3, diff3)
plt.plot(t3, diff3, '.', color='green', label='Difference, h=0.1')

# Set labels and limits
plt.xlabel('Time (t)')
plt.ylabel('Difference')
plt.xlim(-0.1, 10.1)
plt.ylim(-0.01, 0.55)

# Add a legend
plt.legend()
# Save the figure
plt.savefig('E1diff.png', bbox_inches='tight')

# Show the plot
plt.show()

# Optionally, download the file (uncomment the line below if needed in a Jupyter environment)
files.download("E1diff.png")